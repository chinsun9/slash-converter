{"version":3,"sources":["reportWebVitals.ts","theme.ts","components/Header.tsx","components/Footer.tsx","components/InputText.tsx","components/Main.tsx","App.tsx","index.tsx"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","isDark","theme","localStorage","getItem","window","matchMedia","matches","setItem","initTheme","color","bgPrimary","bgSecondary","textPrimary","textSecondary","textLink","Style","styled","div","props","Header","Footer","href","target","rel","label","InputText","title","onChange","value","copyValue","type","onClick","e","currentTarget","select","document","execCommand","convertSlash","origin","replace","Main","containerRef","useRef","resultRef","useState","userInput","setUserInput","useEffect","userInputLength","trim","length","containerBox","current","resultBox","style","height","offsetHeight","ref","className","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.9d575ec2.chunk.js","sourcesContent":["import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { Theme as ThemeType } from '@emotion/react';\r\n\r\ndeclare module '@emotion/react' {\r\n  export interface Theme {\r\n    color: {\r\n      bgPrimary: string;\r\n      bgSecondary: string;\r\n      textPrimary: string;\r\n      textSecondary: string;\r\n      textLink: string;\r\n    };\r\n  }\r\n}\r\n\r\nlet isDark = false;\r\n\r\nfunction initTheme() {\r\n  // chk local storage\r\n  const theme = localStorage.getItem('theme');\r\n  if (theme === 'dark') {\r\n    isDark = true;\r\n    return;\r\n  }\r\n  if (theme === 'light') {\r\n    return;\r\n  }\r\n\r\n  //   visit first time\r\n  isDark = window.matchMedia('(prefers-color-scheme: dark)').matches;\r\n\r\n  localStorage.setItem('theme', isDark ? 'dark' : 'light');\r\n}\r\n\r\ninitTheme();\r\n\r\nconst theme: ThemeType = {\r\n  color: {\r\n    bgPrimary: isDark ? '#1e1e1e' : '#ffffff',\r\n    bgSecondary: isDark ? '#3c3c3c' : '#dddddd',\r\n    textPrimary: isDark ? '#ffffff' : '#000000',\r\n    textSecondary: isDark ? '#8b949e' : '#7a7a7a',\r\n    textLink: isDark ? '#ce9178' : '#0000ff',\r\n  },\r\n};\r\n\r\nexport default theme;\r\n","import React from 'react';\r\nimport styled from '@emotion/styled';\r\n\r\nconst Style = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  background-color: ${(props) => props.theme.color.bgSecondary};\r\n  padding: 1rem 1.6rem;\r\n`;\r\nfunction Header() {\r\n  return (\r\n    <Style>\r\n      <h1>Slash Converter</h1>\r\n    </Style>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport styled from '@emotion/styled';\r\n\r\nconst Style = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  background-color: ${(props) => props.theme.color.bgSecondary};\r\n  justify-content: space-between;\r\n  padding: 0.5rem 0.8rem;\r\n\r\n  a {\r\n    color: ${(props) => props.theme.color.textLink};\r\n    text-decoration: none;\r\n\r\n    :hover {\r\n      text-decoration: underline;\r\n    }\r\n  }\r\n`;\r\n\r\nfunction Footer() {\r\n  return (\r\n    <Style>\r\n      <a href=\"https://github.com/chinsun9\" target=\"_blank\" rel=\"noreferrer\">\r\n        @chinsun9\r\n      </a>\r\n      <a\r\n        href=\"https://github.com/chinsun9/slash-converter\"\r\n        target=\"_blank\"\r\n        rel=\"noreferrer\"\r\n      >\r\n        source code\r\n      </a>\r\n    </Style>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","/* eslint-disable react/require-default-props */\r\nimport React from 'react';\r\nimport styled from '@emotion/styled';\r\n\r\nconst Style = styled.label`\r\n  color: ${(props) => props.theme.color.textSecondary};\r\n\r\n  input {\r\n    display: grid;\r\n    place-items: center;\r\n    padding: 1rem 1.6rem;\r\n    outline: none;\r\n    background-color: none;\r\n    border: 1px solid ${(props) => props.theme.color.textSecondary};\r\n    border-radius: 0.4rem;\r\n    width: 100%;\r\n    font-size: 1.4rem;\r\n    margin-top: 10px;\r\n    background-color: transparent;\r\n    color: ${(props) => props.theme.color.textPrimary};\r\n  }\r\n`;\r\n\r\ntype Props = {\r\n  title: string;\r\n  value: string;\r\n  onChange: (event: React.ChangeEvent<HTMLInputElement>) => void;\r\n  copyValue?: boolean;\r\n};\r\n\r\nfunction InputText({ title, onChange, value, copyValue = false }: Props) {\r\n  const onClickHandler = (\r\n    e: React.MouseEvent<HTMLInputElement, MouseEvent>\r\n  ) => {\r\n    if (!copyValue) {\r\n      return;\r\n    }\r\n    e.currentTarget.select();\r\n    document.execCommand('copy');\r\n  };\r\n\r\n  return (\r\n    <Style>\r\n      {title}\r\n      <input\r\n        type=\"text\"\r\n        value={value}\r\n        onChange={onChange}\r\n        onClick={onClickHandler}\r\n      />\r\n    </Style>\r\n  );\r\n}\r\n\r\nexport default InputText;\r\n","import React, { useEffect, useRef, useState } from 'react';\r\nimport styled from '@emotion/styled';\r\nimport InputText from './InputText';\r\n\r\nconst Style = styled.div`\r\n  display: grid;\r\n  place-items: center;\r\n  width: 100%;\r\n  min-height: 100%;\r\n  max-width: 1000px;\r\n  padding: 0 2rem;\r\n  margin: auto;\r\n  grid-template-rows: 1fr auto;\r\n\r\n  .input,\r\n  .result {\r\n    width: 100%;\r\n  }\r\n\r\n  .result {\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    justify-content: center;\r\n    align-content: center;\r\n    gap: 1rem;\r\n    height: 0;\r\n    overflow: hidden;\r\n    margin: 2rem 0;\r\n    transition: height 0.4s ease;\r\n\r\n    > * {\r\n      flex: 1 1 300px;\r\n    }\r\n  }\r\n`;\r\n\r\nconst convertSlash = (type: string, origin: string) => {\r\n  return origin.replace(/[/\\\\]+/g, type);\r\n};\r\n\r\nfunction Main() {\r\n  const containerRef = useRef<HTMLDivElement>(null);\r\n  const resultRef = useRef<HTMLDivElement>(null);\r\n\r\n  const [userInput, setUserInput] = useState('');\r\n  const onUserInputChangeHandler = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setUserInput(e.target.value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const userInputLength = userInput.trim().length;\r\n    const containerBox = containerRef.current;\r\n    const resultBox = resultRef.current;\r\n\r\n    if (containerBox && resultBox) {\r\n      resultBox.style.height = `${\r\n        userInputLength ? containerBox.offsetHeight / 2 : 0\r\n      }px`;\r\n    }\r\n  }, [userInput]);\r\n\r\n  return (\r\n    <Style ref={containerRef}>\r\n      <div className=\"input\">\r\n        <InputText\r\n          title=\"input your path\"\r\n          value={userInput}\r\n          onChange={onUserInputChangeHandler}\r\n        />\r\n      </div>\r\n\r\n      <div className=\"result\" ref={resultRef}>\r\n        <InputText\r\n          title=\"type /\"\r\n          value={convertSlash('/', userInput)}\r\n          onChange={() => null}\r\n          copyValue\r\n        />\r\n        <InputText\r\n          title=\"type \\\"\r\n          value={convertSlash('\\\\', userInput)}\r\n          onChange={() => null}\r\n          copyValue\r\n        />\r\n        <InputText\r\n          title=\"type \\\\\"\r\n          value={convertSlash('\\\\\\\\', userInput)}\r\n          onChange={() => null}\r\n          copyValue\r\n        />\r\n      </div>\r\n    </Style>\r\n  );\r\n}\r\n\r\nexport default Main;\r\n","import React from 'react';\nimport styled from '@emotion/styled';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport Main from './components/Main';\n\nconst Style = styled.div`\n  display: grid;\n  grid-template-rows: auto 1fr auto;\n  min-height: 100vh;\n  color: ${(props) => props.theme.color.textPrimary};\n  background-color: ${(props) => props.theme.color.bgPrimary};\n`;\n\nfunction App() {\n  return (\n    <Style>\n      <Header />\n      <Main />\n      <Footer />\n    </Style>\n  );\n}\n\nexport default App;\n","import './index.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { ThemeProvider } from '@emotion/react';\nimport reportWebVitals from './reportWebVitals';\nimport theme from './theme';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}